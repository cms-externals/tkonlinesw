//
// File generated by rootcint at Fri Oct 31 08:07:41 2003.
// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h"
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

#include "TBZebraCint.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;

#include "RtypesImp.h"

namespace ROOT {
   namespace Shadow {
   } // Of namespace ROOT::Shadow
} // Of namespace ROOT

namespace ROOT {
   void TBZana_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   TClass *TBZana_IsA(const void*);

   // Function generating the singleton type initializer
   TGenericClassInfo *GenerateInitInstance(const TBZana*)
   {
      TBZana *ptr = 0;
      static ROOT::TGenericClassInfo 
         instance("TBZana", TBZana::Class_Version(), "TBZana.h", 18,
                  typeid(TBZana), DefineBehavior(ptr, ptr),
                  &::TBZana::Dictionary, 0);
      return &instance;
   }
   // Static variable to force the class initialization
   static ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance((const TBZana*)0x0); R__UseDummy(_R__UNIQUE_(Init));
}

//______________________________________________________________________________
TClass *TBZana::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBZana::Class_Name()
{
   return "TBZana";
}

//______________________________________________________________________________
const char *TBZana::ImplFileName()
{
   return ROOT::GenerateInitInstance((const TBZana*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBZana::ImplFileLine()
{
   return ROOT::GenerateInitInstance((const TBZana*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBZana::Dictionary()
{
   fgIsA = ROOT::GenerateInitInstance((const TBZana*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBZana::Class()
{
   if (!fgIsA) fgIsA = ROOT::GenerateInitInstance((const TBZana*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TBZana::Streamer(TBuffer &R__b)
{
   // Stream an object of class TBZana.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TBBuilder::Streamer(R__b);
      R__b.ReadStaticArray(fIsOpen);
      R__b >> fCurFile;
      R__b.CheckByteCount(R__s, R__c, TBZana::IsA());
   } else {
      R__c = R__b.WriteVersion(TBZana::IsA(), kTRUE);
      TBBuilder::Streamer(R__b);
      R__b.WriteArray(fIsOpen, 100);
      R__b << fCurFile;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TBZana::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TBZana.

      TClass *R__cl = TBZana::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "fIsOpen[100]", fIsOpen);
      R__insp.Inspect(R__cl, R__parent, "fCurFile", &fCurFile);
      TBBuilder::ShowMembers(R__insp, R__parent);
}

/********************************************************
* TBZebraCint.cxx
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableTBZebraCint();

extern "C" void G__set_cpp_environmentTBZebraCint() {
  G__add_compiledheader("TROOT.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TBZana.h");
  G__add_compiledheader("TBLinkZebra.h");
  G__cpp_reset_tagtableTBZebraCint();
}
class G__TBZebraCintdOcxx_tag {};

void* operator new(size_t size,G__TBZebraCintdOcxx_tag* p) {
  if(p && G__PVOID!=G__getgvp()) return((void*)p);
#ifndef G__ROOT
  return(malloc(size));
#else
  return(::operator new(size));
#endif
}

/* dummy, for exception */
#ifdef G__EH_DUMMY_DELETE
void operator delete(void *p,G__TBZebraCintdOcxx_tag* x) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}
#endif

static void G__operator_delete(void *p) {
  if((long)p==G__getgvp() && G__PVOID!=G__getgvp()) return;
#ifndef G__ROOT
  free(p);
#else
  ::operator delete(p);
#endif
}

void G__DELDMY_TBZebraCintdOcxx() { G__operator_delete(0); }

extern "C" int G__cpp_dllrevTBZebraCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TBZana */
static int G__TBZana_TBZana_0_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   TBZana *p=NULL;
   if(G__getaryconstruct()) p=new TBZana[G__getaryconstruct()];
   else                    p=new TBZana;
      result7->obj.i = (long)p;
      result7->ref = (long)p;
      result7->type = 'u';
      result7->tagnum = G__get_linked_tagnum(&G__TBZebraCintLN_TBZana);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_ReadFile_2_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBZana*)(G__getstructoffset()))->ReadFile((Int_t)G__int(libp->para[0]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_GetNextEvent_3_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)((TBZana*)(G__getstructoffset()))->GetNextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_Class_6_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)TBZana::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_Class_Name_7_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)TBZana::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_Class_Version_8_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,115,(long)TBZana::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_Dictionary_9_0(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      TBZana::Dictionary();
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_IsA_0_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,85,(long)((const TBZana*)(G__getstructoffset()))->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_ShowMembers_1_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBZana*)(G__getstructoffset()))->ShowMembers(*(TMemberInspector*)libp->para[0].ref,(char*)G__int(libp->para[1]));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_Streamer_2_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBZana*)(G__getstructoffset()))->Streamer(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_StreamerNVirtual_3_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__setnull(result7);
      ((TBZana*)(G__getstructoffset()))->StreamerNVirtual(*(TBuffer*)libp->para[0].ref);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_DeclFileName_4_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)TBZana::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_ImplFileLine_5_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBZana::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_ImplFileName_6_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,67,(long)TBZana::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBZana_DeclFileLine_7_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
      G__letint(result7,105,(long)TBZana::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TBZana_TBZana_8_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash)
{
   TBZana *p;
   p=new TBZana(*(TBZana*)G__int(libp->para[0]));
   result7->obj.i = (long)p;
   result7->ref = (long)p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__TBZebraCintLN_TBZana);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TBZana G__TTBZana;
static int G__TBZana_wATBZana_9_1(G__value *result7,G__CONST char *funcname,struct G__param *libp,int hash) {
   if(0==G__getstructoffset()) return(1);
   if(G__getaryconstruct())
     if(G__PVOID==G__getgvp())
       delete[] (TBZana *)(G__getstructoffset());
     else
       for(int i=G__getaryconstruct()-1;i>=0;i--)
         delete (TBZana *)((G__getstructoffset())+sizeof(TBZana)*i);
   else  delete (TBZana *)(G__getstructoffset());
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TBZana */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTBZebraCint {
 public:
  G__Sizep2memfuncTBZebraCint() {p=&G__Sizep2memfuncTBZebraCint::sizep2memfunc;}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTBZebraCint::*p)();
};

size_t G__get_sizep2memfuncTBZebraCint()
{
  G__Sizep2memfuncTBZebraCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTBZebraCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TBZebraCintLN_TBZana))) {
     TBZana *G__Lderived;
     G__Lderived=(TBZana*)0x1000;
     {
       TBBuilder *G__Lpbase=(TBBuilder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TBZebraCintLN_TBZana),G__get_linked_tagnum(&G__TBZebraCintLN_TBBuilder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TBZebraCintLN_TBZana),G__get_linked_tagnum(&G__TBZebraCintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TBZebraCintLN_TBZana),G__get_linked_tagnum(&G__TBZebraCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTBZebraCint() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,
-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,
-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,
-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,
-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,
-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Seek_t",105,-1,0,
-1);
   G__setnewtype(-1,"File pointer (int)",0);
   G__search_typename2("Long_t",108,-1,0,
-1);
   G__setnewtype(-1,"Signed long integer 4 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,
-1);
   G__setnewtype(-1,"Unsigned long integer 4 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,
-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,
-1);
   G__setnewtype(-1,"Float 8 bytes (double)",0);
   G__search_typename2("Text_t",99,-1,0,
-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",103,-1,0,
-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Byte_t",98,-1,0,
-1);
   G__setnewtype(-1,"Byte (8 bits) (unsigned char)",0);
   G__search_typename2("Version_t",115,-1,0,
-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,0,
-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Ssiz_t",105,-1,0,
-1);
   G__setnewtype(-1,"String size (int)",0);
   G__search_typename2("Real_t",102,-1,0,
-1);
   G__setnewtype(-1,"TVector and TMatrix element type (float)",0);
   G__search_typename2("Streamer_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("VoidFuncPtr_t",89,-1,0,
-1);
   G__setnewtype(-1,"pointer to void function",0);
   G__search_typename2("ShowMembersFunc_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("IsAFunc_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("FreeHookFun_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ReAllocFun_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("ReAllocCFun_t",89,-1,0,
-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Axis_t",100,-1,0,
-1);
   G__setnewtype(-1,"Axis values type (double)",0);
   G__search_typename2("Stat_t",100,-1,0,
-1);
   G__setnewtype(-1,"Statistics type (double)",0);
   G__search_typename2("Font_t",115,-1,0,
-1);
   G__setnewtype(-1,"Font number (short)",0);
   G__search_typename2("Style_t",115,-1,0,
-1);
   G__setnewtype(-1,"Style number (short)",0);
   G__search_typename2("Marker_t",115,-1,0,
-1);
   G__setnewtype(-1,"Marker number (short)",0);
   G__search_typename2("Width_t",115,-1,0,
-1);
   G__setnewtype(-1,"Line width (short)",0);
   G__search_typename2("Color_t",115,-1,0,
-1);
   G__setnewtype(-1,"Color number (short)",0);
   G__search_typename2("SCoord_t",115,-1,0,
-1);
   G__setnewtype(-1,"Screen coordinates (short)",0);
   G__search_typename2("Coord_t",100,-1,0,
-1);
   G__setnewtype(-1,"Pad world coordinates (double)",0);
   G__search_typename2("Angle_t",102,-1,0,
-1);
   G__setnewtype(-1,"Graphics angle (float)",0);
   G__search_typename2("Size_t",102,-1,0,
-1);
   G__setnewtype(-1,"Attribute size (float)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TBZana */
static void G__setup_memvarTBZana(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TBZebraCintLN_TBZana));
   { TBZana *p; p=(TBZana*)0x1000; if (p) { }
   G__memvar_setup((void*)NULL,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsOpen[100]=",0,"Names of files");
   G__memvar_setup((void*)NULL,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCurFile=",0,(char*)NULL);
   G__memvar_setup((void*)NULL,85,0,0,G__get_linked_tagnum(&G__TBZebraCintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTBZebraCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTBZana(void) {
   /* TBZana */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TBZebraCintLN_TBZana));
   G__memfunc_setup("TBZana",544,G__TBZana_TBZana_0_0,105,G__get_linked_tagnum(&G__TBZebraCintLN_TBZana),-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ReadFile",764,G__TBZana_ReadFile_2_0,121,-1,-1,0,1,1,1,0,"i - 'Int_t' 0 - i",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("GetNextEvent",1217,G__TBZana_GetNextEvent_3_0,105,-1,G__defined_typename("Int_t"),0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("InitZebra",904,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("EndZebra",779,(G__InterfaceMethod)NULL,121,-1,-1,0,0,1,2,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class",502,G__TBZana_Class_6_0,85,G__get_linked_tagnum(&G__TBZebraCintLN_TClass),-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Name",982,G__TBZana_Class_Name_7_0,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Class_Version",1339,G__TBZana_Class_Version_8_0,115,-1,G__defined_typename("Version_t"),0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("Dictionary",1046,G__TBZana_Dictionary_9_0,121,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("IsA",253,G__TBZana_IsA_0_1,85,G__get_linked_tagnum(&G__TBZebraCintLN_TClass),-1,0,0,1,1,8,"",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("ShowMembers",1132,G__TBZana_ShowMembers_1_1,121,-1,-1,0,2,1,1,0,
"u 'TMemberInspector' - 1 - insp C - - 0 - parent",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("Streamer",835,G__TBZana_Streamer_2_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TBZana_StreamerNVirtual_3_1,121,-1,-1,0,1,1,1,0,"u 'TBuffer' - 1 - b",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileName",1145,G__TBZana_DeclFileName_4_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileLine",1178,G__TBZana_ImplFileLine_5_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("ImplFileName",1171,G__TBZana_ImplFileName_6_1,67,-1,-1,0,0,3,1,1,"",(char*)NULL,(void*)NULL,0);
   G__memfunc_setup("DeclFileLine",1152,G__TBZana_DeclFileLine_7_1,105,-1,-1,0,0,3,1,0,"",(char*)NULL,(void*)NULL,0);
   // automatic copy constructor
   G__memfunc_setup("TBZana",544,G__TBZana_TBZana_8_1,(int)('i'),G__get_linked_tagnum(&G__TBZebraCintLN_TBZana),-1,0,1,1,1,0,"u 'TBZana' - 11 - -",(char*)NULL,(void*)NULL,0);
   // automatic destructor
   G__memfunc_setup("~TBZana",670,G__TBZana_wATBZana_9_1,(int)('y'),-1,-1,0,0,1,1,0,"",(char*)NULL,(void*)NULL,1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTBZebraCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTBZebraCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTBZebraCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TBZebraCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TBZebraCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TBZebraCintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__TBZebraCintLN_TBBuilder = { "TBBuilder" , 99 , -1 };
G__linked_taginfo G__TBZebraCintLN_TBZana = { "TBZana" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTBZebraCint() {
  G__TBZebraCintLN_TClass.tagnum = -1 ;
  G__TBZebraCintLN_TObject.tagnum = -1 ;
  G__TBZebraCintLN_TNamed.tagnum = -1 ;
  G__TBZebraCintLN_TBBuilder.tagnum = -1 ;
  G__TBZebraCintLN_TBZana.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTBZebraCint() {

   /* Setting up class,struct,union tag entry */
   G__tagtable_setup(G__get_linked_tagnum(&G__TBZebraCintLN_TBZana),sizeof(TBZana),-1,29952,"Semi-Abstract class to handle analysis",G__setup_memvarTBZana,G__setup_memfuncTBZana);
}
extern "C" void G__cpp_setupTBZebraCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupTBZebraCint()");
  G__set_cpp_environmentTBZebraCint();
  G__cpp_setup_tagtableTBZebraCint();

  G__cpp_setup_inheritanceTBZebraCint();

  G__cpp_setup_typetableTBZebraCint();

  G__cpp_setup_memvarTBZebraCint();

  G__cpp_setup_memfuncTBZebraCint();
  G__cpp_setup_globalTBZebraCint();
  G__cpp_setup_funcTBZebraCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTBZebraCint();
  return;
}
class G__cpp_setup_initTBZebraCint {
  public:
    G__cpp_setup_initTBZebraCint() { G__add_setup_func("TBZebraCint",(G__incsetup)(&G__cpp_setupTBZebraCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTBZebraCint() { G__remove_setup_func("TBZebraCint"); }
};
G__cpp_setup_initTBZebraCint G__cpp_setup_initializerTBZebraCint;

